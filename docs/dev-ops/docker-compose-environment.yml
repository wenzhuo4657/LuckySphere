# 创建并启动容器  docker compose -f docker-compose-environment.yml up -d
name: big-market-environment  #指定项目名称
services:
  # 注册中心 https://github.com/nacos-group/nacos-docker - 其他配置可参考(集群)
  # http://127.0.0.1:8848/nacos 【账号：nacos 密码：nacos】
  nacos:
    image: nacos/nacos-server:v2.4.3
    container_name: nacos
    restart: always
    ports:
      - "8848:8848"
      - "9848:9848"
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=465700
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      - NACOS_AUTH_IDENTITY_KEY=2222
      - NACOS_AUTH_IDENTITY_VALUE=2xxx
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
    networks:
      - big-market-network
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    image: mysql:8.0.39
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password   # 指定身份验证插件，
    restart: always
    hostname: mysql
    environment:
      MYSQL_SQL_MODE:  ALLOW_INVALID_DATES
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 465700
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/sql:/docker-entrypoint-initdb.d   # 该目录下的sql文件会在创建时自动执行
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
    networks:
      - big-market-network

  redis:
    image: redis:6.2
    container_name: redis
    restart:  always
    ports:
      - 6379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    hostname: redis  # 声明一个用于服务容器的自定义主机名
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
        - big-market-network

#  rabbitmq:
#    image: rabbitmq:3.12.9
#    container_name: rabbitmq
#    restart: always
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    environment:
#      RABBITMQ_DEFAULT_USER: admin
#      RABBITMQ_DEFAULT_PASS: admin
#    command: rabbitmq-server
#    volumes:
#      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
#    networks:
#      - big-market-network

  namesrv:
    image: apache/rocketmq:4.9.6
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    networks:
      - big-market-network
    command: sh mqnamesrv
  broker:
      image: apache/rocketmq:4.9.6
      container_name: rmqbroker
      ports:
        - 10909:10909
        - 10911:10911
        - 10912:10912
      environment:
        - NAMESRV_ADDR=rmqnamesrv:9876
      volumes:
        - ./rocketmq/broker.conf:/home/rocketmq/rocketmq-4.9.6/conf/broker.conf
      depends_on:
        namesrv:
          condition: service_healthy
      networks:
        - big-market-network
      command: sh mqbroker -c /home/rocketmq/rocketmq-4.9.6/conf/broker.conf

  zookeeper:
    image: zookeeper:3.9.0
    container_name: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    networks:
      - big-market-network

# canal:增量mysql数据同步，

# canal-server 伪装为mysql从库
  canal-server:
    image: canal/canal-server:v1.1.7
    container_name: canal-server
    restart: unless-stopped
    ports:
      - "11111:11111"
    volumes:
      - ./canal/instance.properties:/home/admin/canal-server/conf/example/instance.properties
    depends_on:
      - mysql
    networks:
      - big-market-network


# canal-adapter 负责数据分发
  canal-adapter:
    image: coopersoft/canal-adapter:v1.1.6
    container_name: canal-adapter
    restart: unless-stopped
    ports:
      - "8082:8081"
    volumes:
      - ./canal-adapter/application.yml:/opt/canal-adapter/conf/application.yml
      - ./canal-adapter/es7:/opt/canal-adapter/conf/es7
    depends_on:
      - canal-server
    networks:
      - big-market-network
  elasticsearch:
    image: elasticsearch:7.17.14
    ports:
      - '9200:9200'
      - '9300:9300'
    container_name: elasticsearch
    restart: always
    environment:
      - 'cluster.name=elasticsearch' # 设置集群名称为elasticsearch
      - 'discovery.type=single-node' # 以单一节点模式启动
      - "cluster.name=docker-cluster" # 设置名称
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m' # 设置使用jvm内存大小
    networks:
      - big-market-network

  kibana:
    image: kibana:7.17.14
    container_name: kibana
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - '5601:5601'
    links:
      - elasticsearch:es #可以用es这个域名访问elasticsearch服务
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200 #设置访问elasticsearch的地址
      - 'elasticsearch.hosts=http://es:9200' #设置访问elasticsearch的地址
      - I18N_LOCALE=zh-CN
    networks:
      - big-market-network
    depends_on:
      - elasticsearch





## 管理工具
#  phpmyadmin:
#    image: phpmyadmin:5.2.1
#    container_name: phpmyadmin
#    hostname: phpmyadmin
#    ports:
#      - 8899:80
#    environment:
#      - PMA_HOST=mysql
#      - PMA_PORT=3306
#      - MYSQL_ROOT_PASSWORD=465700
#    depends_on:
#      mysql:
#        condition: service_healthy
#    networks:
#      - big-market-network

  rocketmqdashboard:
    container_name: rocketmq-dashboard
    image: apacherocketmq/rocketmq-dashboard:latest
    hostname: rocketmq-dashboard
    environment:
      - "JAVA_OPTS=-Drocketmq.namesrv.addr=http://117.72.36.124:9876"
    ports:
       - 8080:8080
    depends_on:
      namesrv:
        condition: service_healthy
    networks:
      - big-market-network



#  redis-admin:
#    image: spryker/redis-commander:0.8.0
#    container_name: redis-admin
#    hostname: redis-commander
#    restart: always
#    ports:
#      - 8081:8081
#    environment:
#      - REDIS_HOSTS=local:redis:6379
#      - HTTP_USER=admin
#      - HTTP_PASSWORD=admin
#      - LANG=C.UTF-8
#      - LANGUAGE=C.UTF-8
#      - LC_ALL=C.UTF-8
#    networks:
#      - big-market-network
#    depends_on:
#      redis:
#        condition: service_healthy

  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.4.1
    container_name: xxl-job-admin
    restart: always
#    depends_on:
#      - mysql
    ports:
      - "9090:9090"
#    links:
#      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://117.72.36.124:3306/xxl_job?serverTimezone=UTC&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Shanghai
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=465700
      - SERVER_PORT=9090
    networks:
      - big-market-network


networks:
  big-market-network:
    driver: bridge



