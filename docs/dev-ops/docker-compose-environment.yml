
services:
  # 注册中心 https://github.com/nacos-group/nacos-docker - 其他配置可参考(集群)
  # http://127.0.0.1:8848/nacos 【账号：nacos 密码：nacos】
  nacos:
    image: nacos/nacos-server:v2.4.3
    container_name: nacos
    restart: always
    ports:
      - "8848:8848"
      - "9848:9848"
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=465700
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      - NACOS_AUTH_IDENTITY_KEY=2222
      - NACOS_AUTH_IDENTITY_VALUE=2xxx
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
    networks:
      - big-market-network
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    image: mysql:8.0.39
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password   # 指定身份验证插件，
    restart: always
    hostname: mysql
    environment:
      MYSQL_SQL_MODE:  ALLOW_INVALID_DATES
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 465700
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/sql:/docker-entrypoint-initdb.d   # 该目录下的sql文件会在创建时自动执行
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
    networks:
      - big-market-network

  redis:
    image: redis:6.2
    container_name: redis
    restart:  always
    ports:
      - 6379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    hostname: redis  # 声明一个用于服务容器的自定义主机名
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
        - big-market-network

  namesrv:
    image: apache/rocketmq:4.9.6
    container_name: namesrv
    ports:
      - 9876:9876
    networks:
      - big-market-network
    command: sh mqnamesrv
  broker:
      image: apache/rocketmq:4.9.6
      container_name: broker
      ports:
        - 10909:10909
        - 10911:10911
        - 10912:10912
      environment:
        - NAMESRV_ADDR=rmqnamesrv:9876
      volumes:
        - ./rocketmq/broker.conf:/home/rocketmq/rocketmq-4.9.6/conf/broker.conf
      networks:
        - big-market-network
      command: sh mqbroker -c /home/rocketmq/rocketmq-4.9.6/conf/broker.conf

  zookeeper:
    image: zookeeper:3.9.0
    container_name: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    networks:
      - big-market-network

  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.4.1
    container_name: xxl-job-admin
    restart: always
#    depends_on:
#      - mysql
    ports:
      - "9090:9090"
#    links:
#      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://117.72.36.124:3306/xxl_job?serverTimezone=UTC&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Shanghai
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=465700
      - SERVER_PORT=9090
    networks:
      - big-market-network


networks:
  big-market-network:
    driver: bridge



